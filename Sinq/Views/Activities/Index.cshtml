@model IEnumerable<Sinq.Models.Activity>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    <!--    Html.ActionLink("Create New", "Create")-->
</p>

<div class="container ">
    <div class='col-lg-6'>
        <div class='col-lg-3'>Nume:</div>

        <div class='col-lg-8 noPadding'>
            <input type='text' class="form-control" id="name" />
        </div>

        <div class='col-lg-1 noPadding'>

            <div class="form-group">

                <div class='input-group date' id='datetimepicker'>
                    <input type='hidden' class="form-control" id="dueDate" />
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class='col-lg-2'>
        <input type="button" value="Add" id="btnAddActivity" onclick="btnAddActivity_onclick()" />
    </div>
</div>


@section Scripts {
    <script type="text/javascript">
        $('#datetimepicker').datetimepicker();
        $('#Name').attr("placeholder", "Type activity name here");

        // weird javascript code
        //function test() { return { prop: "asd" }};
        //test['a'] = function () { alert(3) } ;
        //test['a']()
        //test.a();
        //alert(test().prop);

        function btnAddActivity_onclick() {
            var name = $('#name').val();
            var dueDate = $('#dueDate').val();
            
            alert(name + ' _ ' + dueDate);
            $.ajax({
                url: "/activities/create",
                method: "POST",
                async: false,
                data: {
                    Id: -1,
                    Name: name,
                    DueDate: dueDate
                }
            }).done(function (result) {
                alert('test')
            })
        }
    </script>
}